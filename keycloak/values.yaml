# Needed or the admin UI will hang forever complaining about mixed security modes, likely due to ingress setup details here
proxy: edge

# Define the main ingress - the admin specific one isn't required but may be a good practice for later?
ingress:
  enabled: true
  hostname: keycloak.terasology.io
  annotations:
    kubernetes.io/ingress.class: "nginx"
    #cert-manager.io/cluster-issuer: letsencrypt-staging
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/rewrite-target: "/"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  tls:
    - hosts:
        - keycloak.terasology.io
      secretName: keycloak-tls-secret
#adminIngress:
#  enabled: true
#  hostname: keycloak-admin.terasology.io
#  annotations:
#    kubernetes.io/ingress.class: "nginx"
#    #cert-manager.io/cluster-issuer: letsencrypt-staging
#    cert-manager.io/cluster-issuer: letsencrypt-prod
#    kubernetes.io/tls-acme: "true"
#    nginx.ingress.kubernetes.io/proxy-body-size: "0"
#    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
#    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
#    nginx.ingress.kubernetes.io/rewrite-target: "/"
#  tls:
#    - hosts:
#        - keycloak-admin.terasology.io
#      secretName: keycloak-admin-tls-secret


# May need the following for CLI setup if desired?
#keycloakConfigCli:
#  configuration: |
#    {
#      "realm" : "master",
#      "attributes": {
#        "frontendUrl": "https://keycloak-admin.example.com"
#      }
#    }
