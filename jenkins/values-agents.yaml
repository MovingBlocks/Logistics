jenkins:
  controller:
    JCasC:
      configScripts:
        agents: |
          jenkins:
            clouds:
            - kubernetes:
                name: "kubernetes"
                containerCap: 10
                containerCapStr: "10"
                websocket: true

                templates:

                  # Our Kaniko-made pre-cached Java builders handle the bulk of agent requests (primary TS and DS jobs) at various JDK levels
                  # Some builds (engine usually) have spiked as high as 4 CPU and 10 GB memory - we used to have module specific light builders, possible good TODO to repeat
                  - name: "kaniko-precached-jdk11"
                    label: "kaniko-precached-jdk11 ts-engine ts-module lib heavy light java11 light-java"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: builder
                      image: "terasology/jenkins-precached-agent:latest-jdk11"
                      command: "sleep"
                      args: "infinity"
                      resourceRequestCpu: "1"
                      resourceRequestMemory: "6144Mi"
                      resourceLimitCpu: "1750m"
                      resourceLimitMemory: "8192Mi"

                  - name: "kaniko-precached-jdk8"
                    label: "kaniko-precached-jdk8"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: builder
                      image: "terasology/jenkins-precached-agent:latest-jdk8"
                      command: "sleep"
                      args: "infinity"
                      resourceRequestCpu: "1"
                      resourceRequestMemory: "6144Mi"
                      resourceLimitCpu: "1750m"
                      resourceLimitMemory: "8192Mi"

                  - name: "kaniko-precached-jdk17"
                    label: "kaniko-precached-jdk17 ts-module heavy java17"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: builder
                      image: "terasology/jenkins-precached-agent:latest-jdk17"
                      command: "sleep"
                      args: "infinity"
                      resourceRequestCpu: "800m"
                      resourceRequestMemory: "2.5Gi"
                      resourceLimitCpu: "1750m"
                      resourceLimitMemory: "5Gi"
                    # Tolerate but do not require a node from the secondary node pool with more resources (toleration only)
                    yaml: |
                      apiVersion: v1
                      kind: Pod
                      spec:
                        tolerations:
                        - key: "heavy-builder-only"
                          operator: "Equal"
                          value: "true"
                          effect: "NoSchedule"

                  - name: "kaniko-precached-jdk17-engine"
                    label: "kaniko-precached-jdk17 ts-engine ts-module heavy java17"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: builder
                      image: "terasology/jenkins-precached-agent:latest-jdk17"
                      command: "sleep"
                      args: "infinity"
                      resourceRequestCpu: "1"
                      resourceRequestMemory: "6144Mi"
                      resourceLimitCpu: "1750m"
                      resourceLimitMemory: "8192Mi"
                    # Require a node from the secondary node pool with more resources (toleration AND node selector)
                    yaml: |
                      apiVersion: v1
                      kind: Pod
                      spec:
                        nodeSelector:
                          builder: heavy
                        tolerations:
                        - key: "heavy-builder-only"
                          operator: "Equal"
                          value: "true"
                          effect: "NoSchedule"

                  # For native builds of some of our libraries
                  - name: "java-native"
                    label: "java-native"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: builder
                      image: "terasology/java-native-jnlp:latest"
                      command: "sleep"
                      args: "infinity"
                      resourceRequestCpu: "1"
                      resourceRequestMemory: "6144Mi"
                      resourceLimitCpu: "1750m"
                      resourceLimitMemory: "8192Mi"

                  # For our module site and other web stuff
                  - name: "python-agent"
                    label: "python"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: builder
                      image: "terasology/modulesite:latest"
                      command: "sleep"
                      args: "infinity"
                      resourceRequestCpu: "250m"
                      resourceRequestMemory: "2048Mi"
                      resourceLimitCpu: "750m"
                      resourceLimitMemory: "4096Mi"

                  # Android builds for Gestalt and Destination Sol
                  - name: "android-agent"
                    label: "android"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: builder
                      image: "terasology/jenkins-android-agent:latest"
                      command: "sleep"
                      args: "infinity"
                      resourceRequestCpu: "750m"
                      resourceRequestMemory: "4864Mi"
                      resourceLimitCpu: "1750m"
                      resourceLimitMemory: "8192Mi"

                  # For building our own custom Docker images
                  - name: "kaniko"
                    label: "kaniko"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: kaniko
                      image: "gcr.io/kaniko-project/executor:debug"
                      command: "/busybox/sleep"
                      args: "infinity"
                      resourceRequestCpu: "250m"
                      resourceRequestMemory: "4Gi"
                      resourceLimitCpu: "900m"
                      resourceLimitMemory: "8Gi"

                  # For Backstage and Docker stuff
                  - name: "jenkins-agent-dind"
                    label: "docker node20"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: jnlp  # Use "jnlp" as the container name as this image relies on its own Jenkins config
                      image: "ghcr.io/felipecrs/jenkins-agent-dind:sha-56f739d"
                      privileged: true  # Add privileged mode for docker-in-docker (not great for security but eh)
                      resourceRequestCpu: "250m"
                      resourceRequestMemory: "2048Mi"
                      resourceLimitCpu: "750m"
                      resourceLimitMemory: "4096Mi"

                  # For utility Kubernetes - above suddenly couldn't find kubectl anymore, this has somewhat too many other things and may be unmaintained
                  - name: "jenkins-agent-kubectl"
                    label: "kubectl"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: builder
                      image: "tfgco/kubectl:2.5.2"
                      command: "sleep"
                      args: "infinity"
                      resourceRequestCpu: "125m"
                      resourceRequestMemory: "2048Mi"
                      resourceLimitCpu: "250m"
                      resourceLimitMemory: "4096Mi"

                  # New multi-JDK pre-cached Java agents taking over from old approach with one image per JDK (although only 8 and 11 need extra steps)
                  - name: "pre-cached-jdk11"
                    label: "newprecachedjcasc"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: jnlp  # Override the default Jenkins container with our extended image
                      image: "us-east1-docker.pkg.dev/teralivekubernetes/test-docker/precachedagent:latest"
                      resourceRequestCpu: "250m"
                      resourceRequestMemory: "2048Mi"
                      resourceLimitCpu: "750m"
                      resourceLimitMemory: "4096Mi"
                      envVars: # Allow Jenkins agent process to use its own JDK while configuring a different one for general purpose
                      - envVar:
                          key: "JENKINS_JAVA_BIN"
                          value: "/opt/java/openjdk/bin/java"
                      - envVar:
                          key: "JAVA_HOME"
                          value: "/opt/jdk-11.0.25+9"
                      - envVar:
                          key: "PATH" # Note: Trying to prepend the existing var by including :$PATH broke the Jenkins agent connection process - hard coding instead
                          value: "/opt/jdk-11.0.25+9/bin:/bin:/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/sbin"

                  # For reference and testing this is a vanilla default Jenkins build agent that just comes with its JDK 17 and nothing else
                  - name: "default17"
                    label: "default17"
                    nodeUsageMode: "EXCLUSIVE"
                    containers:
                    - name: "jnlp"
                      image: "jenkins/inbound-agent:latest-jdk17"
                      alwaysPullImage: true
                      resourceRequestCpu: "800m"
                      resourceRequestMemory: "6144Mi"
                      workingDir: "/home/jenkins/agent"
