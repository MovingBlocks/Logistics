# We use jenkins at the top level since our chart sub-charts the "jenkins" chart
jenkins:
  # Something goes funny without this even if if installed into the right namespace
  # Specifically some agent namespace settings and URLs end up reverting to "default"
  namespaceOverride: jenkins

  persistence:
    storageClass: ssd
    size: 200Gi

  # Stuff for the main server - see other values files for more specific stuff
  controller:
    image:
      repository: "jenkins/jenkins"
      tag: "2.479.1-lts"
    resources:
      requests:
        cpu: "250m"
        memory: "4Gi"
      limits:
        cpu: "2000m"
        memory: "8Gi"
    JCasC:
      defaultConfig: false  # Disable the default JCasC configuration (don't want two Kubernetes clouds)
    jenkinsAdminEmail: terasology@gmail.com
    numExecutors: 1
    executorMode: EXCLUSIVE
    customJenkinsLabels: "main master built-in"
    initScripts:
      disableCli: |-
        def removal = { lst ->
          lst.each { x -> if (x.getClass().name?.contains("CLIAction")) lst.remove(x) }
        }
        def j = jenkins.model.Jenkins.get();
        removal(j.getExtensionList(hudson.cli.CLIAction.class))
        removal(j.getExtensionList(hudson.ExtensionPoint.class))
        removal(j.getExtensionList(hudson.model.Action.class))
        removal(j.getExtensionList(hudson.model.ModelObject.class))
        removal(j.getExtensionList(hudson.model.RootAction.class))
        removal(j.getExtensionList(hudson.model.UnprotectedRootAction.class))
        removal(j.getExtensionList(java.lang.Object.class))
        removal(j.getExtensionList(org.kohsuke.stapler.StaplerProxy.class))
        removal(j.actions)

    # Pull secrets from Kubernetes and set them as env vars on the pod for JCasC to use later
    containerEnv:
      - name: GITHUB_CLIENT_ID
        valueFrom:
          secretKeyRef:
            name: jenkins-secrets
            key: github-client-id
      - name: GITHUB_CLIENT_SECRET
        valueFrom:
          secretKeyRef:
            name: jenkins-secrets
            key: github-client-secret
      # The casc piece came by default, other is required to enable https://plugins.jenkins.io/permissive-script-security/
      - name: JAVA_OPTS
        value: "-Dcasc.reload.token=terajenkins-0 -Dpermissive-script-security.enabled=no_security"
    ingress:
      enabled: true
      hostName: jenkins.nanoware.us
      resourceRootUrl: content.nanoware.us
      tls:
      - hosts:
        - jenkins.nanoware.us
        - content.nanoware.us
        secretName: jenkins-tls-secret
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        kubernetes.io/tls-acme: "true"
        kubernetes.io/ingress.class: nginx
